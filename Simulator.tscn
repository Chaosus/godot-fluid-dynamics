[gd_scene load_steps=42 format=2]

[ext_resource path="res://Simulator.gd" type="Script" id=1]
[ext_resource path="res://scripts/Density.gd" type="Script" id=2]
[ext_resource path="res://splat.material" type="Material" id=3]
[ext_resource path="res://shaders/diffusion.shader" type="Shader" id=4]
[ext_resource path="res://shaders/bounds.shader" type="Shader" id=5]
[ext_resource path="res://resources/bounds.png" type="Texture" id=6]
[ext_resource path="res://scripts/Velocity.gd" type="Script" id=7]
[ext_resource path="res://shaders/project.shader" type="Shader" id=8]
[ext_resource path="res://scripts/Divergence.gd" type="Script" id=9]
[ext_resource path="res://shaders/divergence.shader" type="Shader" id=10]
[ext_resource path="res://shaders/linsolve.shader" type="Shader" id=11]
[ext_resource path="res://firegrad.tres" type="Gradient" id=12]

[sub_resource type="ViewportTexture" id=1]

[sub_resource type="ImageTexture" id=2]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="ShaderMaterial" id=3]
resource_local_to_scene = true
shader = ExtResource( 4 )
shader_param/N = 512.0
shader_param/max_iterations = 20
shader_param/diff = 10.0
shader_param/dt = 10.0

[sub_resource type="ImageTexture" id=4]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform float N = 512;

// ADVECTION

uniform sampler2D velocity_texture;
uniform sampler2D obstacles;

void fragment()
{
	float time_step = 0.001;
	float fi = SCREEN_UV.x * N;
	float fj = SCREEN_UV.y * N;
	int i = int(fi);
	int j = int(fj);
	vec3 tex = texture(velocity_texture, UV).xyz;
	bool rest = tex.z > 0.5;
	vec2 velocity;
	velocity = vec2(1.0, 1.0) - ((tex.xy * 2.0 - 1.0) * float(rest));
	int i0;
	int j0;
	int i1;
	int j1;
	float dt0 = time_step * N;
	float s0;
	float s1;	
	float t0;
	float t1;
	float x = fi - dt0 * velocity.x;
	float y = fj - dt0 * velocity.y;
	if(x < 0.5) {
		x = 0.5;
	}
	if(x > N+0.5) {
		x = N+0.5;
	}
	i0 = int(x);
	i1 = i0 + 1;
	if(y < 0.5) {
		y = 0.5;
	}
	if(y > N+0.5) {
		y = N+0.5;
	}
	j0 = int(y);
	j1 = j0 + 1;

	s1 = x - float(i0);
	s0 = 1.0 - s1;

	t1 = y - float(j0);
	t0 = 1.0 - t1;

	float k0 = texelFetch(SCREEN_TEXTURE, ivec2(i0, j0), 0).r;
	float k1 = texelFetch(SCREEN_TEXTURE, ivec2(i0, j1), 0).r;
	float k2 = texelFetch(SCREEN_TEXTURE, ivec2(i1, j0), 0).r;
	float k3 = texelFetch(SCREEN_TEXTURE, ivec2(i1, j1), 0).r;

	float d = s0 * (t0 * k0 + t1 * k1) + s1 * (t0 * k2 + t1 * k3);
	COLOR.rgb = vec3(d);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/N = 512.0

[sub_resource type="ImageTexture" id=7]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="ShaderMaterial" id=8]
shader = ExtResource( 5 )
shader_param/bounds = ExtResource( 6 )

[sub_resource type="ImageTexture" id=9]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="Shader" id=10]
resource_local_to_scene = true
code = "shader_type canvas_item;

// SUBTRACTION

void fragment()
{
	COLOR.rgb = vec3(mix(texture(SCREEN_TEXTURE, SCREEN_UV).rgb, vec3(0.0, 0.0, 0.0), 0.001).r, 0, 0);
}"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )

[sub_resource type="ImageTexture" id=12]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="Shader" id=13]
code = "shader_type canvas_item;

// SPLAT VELOCITY SHADER

uniform vec3 force;
uniform vec2 point;
uniform float radius;

float gauss(vec2 p, float r)
{
    return exp(-dot(p, p) / r);
}

void fragment()
{
    vec3 base = texture(SCREEN_TEXTURE, UV).rgb;
    vec2 coord = point * SCREEN_PIXEL_SIZE - UV;
	vec2 tcoord = coord / SCREEN_PIXEL_SIZE;
    float splat = gauss(tcoord, radius);
    COLOR.rgb = mix(base, force * 0.5 + 0.5, splat);
}"

[sub_resource type="ShaderMaterial" id=14]
resource_local_to_scene = true
shader = SubResource( 13 )
shader_param/force = Vector3( 0, 0, 0 )
shader_param/point = Vector2( 0, 0 )
shader_param/radius = 0.0

[sub_resource type="ImageTexture" id=15]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="ShaderMaterial" id=16]
resource_local_to_scene = true
shader = ExtResource( 8 )
shader_param/N = 512.0

[sub_resource type="ImageTexture" id=17]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="ImageTexture" id=18]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="ShaderMaterial" id=19]
resource_local_to_scene = true
shader = ExtResource( 10 )
shader_param/N = 512.0

[sub_resource type="ImageTexture" id=20]
flags = 3
flags = 3
size = Vector2( 512, 512 )

[sub_resource type="ShaderMaterial" id=21]
resource_local_to_scene = true
shader = ExtResource( 11 )
shader_param/N = 512.0
shader_param/A = 1.0
shader_param/C = 4.0
shader_param/MAX_ITER = 20

[sub_resource type="Shader" id=22]
resource_local_to_scene = true
code = "shader_type canvas_item;

uniform sampler2D density_texture;

void fragment()
{
	COLOR.r = texture(density_texture, SCREEN_UV).r;
}"

[sub_resource type="ViewportTexture" id=23]
viewport_path = NodePath("Density")

[sub_resource type="ShaderMaterial" id=24]
resource_local_to_scene = true
shader = SubResource( 22 )
shader_param/density_texture = SubResource( 23 )

[sub_resource type="ViewportTexture" id=25]
flags = 3

[sub_resource type="Shader" id=26]
code = "shader_type canvas_item;

uniform sampler2D gradient;
uniform sampler2D blocks;

void fragment()
{
	float density = texture(SCREEN_TEXTURE, UV).r;
	float block = texture(blocks, UV).r;
	vec3 color = texture(gradient, vec2(density, 0.0)).rgb;
	color += vec3(block, 0, 0);
	COLOR.rgb = color;
}"

[sub_resource type="GradientTexture" id=27]
gradient = ExtResource( 12 )

[sub_resource type="ShaderMaterial" id=28]
resource_local_to_scene = true
shader = SubResource( 26 )
shader_param/gradient = SubResource( 27 )
shader_param/blocks = ExtResource( 6 )

[sub_resource type="ImageTexture" id=29]
size = Vector2( 512, 512 )

[node name="Simulator" type="TextureRect"]
margin_right = 512.0
margin_bottom = 512.0
rect_min_size = Vector2( 512, 512 )
focus_mode = 2
texture = SubResource( 1 )
stretch_mode = 1
script = ExtResource( 1 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}
splat_radius = 5.0

[node name="Density" type="Viewport" parent="."]
size = Vector2( 512, 512 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_v_flip = true
render_target_clear_mode = 2
render_target_update_mode = 3
script = ExtResource( 2 )

[node name="Splat" type="TextureRect" parent="Density"]
material = ExtResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 2 )
stretch_mode = 1

[node name="Buffer2" type="BackBufferCopy" parent="Density"]
copy_mode = 2

[node name="Diffusion" type="TextureRect" parent="Density"]
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 4 )
stretch_mode = 1

[node name="Buffer3" type="BackBufferCopy" parent="Density"]
copy_mode = 2

[node name="Advection" type="TextureRect" parent="Density"]
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 7 )
stretch_mode = 1

[node name="Buffer" type="BackBufferCopy" parent="Density"]
copy_mode = 2

[node name="Bounds" type="TextureRect" parent="Density"]
visible = false
material = SubResource( 8 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 9 )
stretch_mode = 1

[node name="Buffer4" type="BackBufferCopy" parent="Density"]
visible = false
copy_mode = 2

[node name="Subtraction" type="TextureRect" parent="Density"]
visible = false
material = SubResource( 11 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 12 )
stretch_mode = 1

[node name="Buffer5" type="BackBufferCopy" parent="Density"]
visible = false
copy_mode = 2

[node name="Velocity" type="Viewport" parent="."]
size = Vector2( 512, 512 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_v_flip = true
render_target_clear_mode = 2
render_target_update_mode = 3
script = ExtResource( 7 )

[node name="Splat" type="TextureRect" parent="Velocity"]
material = SubResource( 14 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 15 )
stretch_mode = 1

[node name="Buffer" type="BackBufferCopy" parent="Velocity"]
copy_mode = 2

[node name="Diffusion" type="TextureRect" parent="Velocity"]
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 4 )
stretch_mode = 1

[node name="Buffer2" type="BackBufferCopy" parent="Velocity"]
copy_mode = 2

[node name="Project" type="TextureRect" parent="Velocity"]
visible = false
material = SubResource( 16 )
margin_right = 512.0
margin_bottom = 512.0
texture = SubResource( 17 )
stretch_mode = 1

[node name="Buffer3" type="BackBufferCopy" parent="Velocity"]
visible = false
copy_mode = 2

[node name="Advection" type="TextureRect" parent="Velocity"]
visible = false
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 7 )
stretch_mode = 1

[node name="Buffer4" type="BackBufferCopy" parent="Velocity"]
visible = false
copy_mode = 2

[node name="Project2" type="TextureRect" parent="Velocity"]
visible = false
material = SubResource( 16 )
margin_right = 512.0
margin_bottom = 512.0
texture = SubResource( 18 )
stretch_mode = 1

[node name="Buffer5" type="BackBufferCopy" parent="Velocity"]
visible = false
copy_mode = 2

[node name="Divergence" type="Viewport" parent="."]
size = Vector2( 512, 512 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_v_flip = true
render_target_clear_mode = 2
render_target_update_mode = 3
script = ExtResource( 9 )

[node name="Divergence" type="TextureRect" parent="Divergence"]
material = SubResource( 19 )
margin_right = 512.0
margin_bottom = 512.0
texture = SubResource( 20 )
stretch_mode = 1

[node name="Buffer" type="BackBufferCopy" parent="Divergence"]
copy_mode = 2

[node name="LinSolve" type="TextureRect" parent="Divergence"]
material = SubResource( 21 )
anchor_right = 1.0
anchor_bottom = 1.0
texture = SubResource( 4 )
stretch_mode = 1

[node name="Buffer2" type="BackBufferCopy" parent="Divergence"]
copy_mode = 2

[node name="Final" type="Viewport" parent="."]
size = Vector2( 512, 512 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_v_flip = true
render_target_clear_mode = 2
render_target_update_mode = 3

[node name="Final" type="TextureRect" parent="Final"]
material = SubResource( 24 )
margin_right = 512.0
margin_bottom = 512.0
texture = SubResource( 25 )
stretch_mode = 1

[node name="Buffer" type="BackBufferCopy" parent="Final"]
copy_mode = 2

[node name="Colorize" type="TextureRect" parent="Final"]
material = SubResource( 28 )
margin_right = 512.0
margin_bottom = 512.0
texture = SubResource( 29 )
stretch_mode = 1
